#!/usr/bin/env node

'use strict';

const http = require('http');
const app = require('../app');
const UtilsIndex = require('../utils');
const ModelIndex = require('../models');

const port = UtilsIndex.ServerUtils.normalizePort(process.env.PORT || '3000');
app.set('port', port);

const server = http.createServer(app);
ModelIndex.sequelize.sync({
    force: false
}).then(() => {
    server.on('error', (error) => {
        if (error.syscall !== 'listen') {
            throw error;
        }
        const bind = typeof port === 'string' ? 'Pipe ' + port : 'Port ' + port;
        switch (error.code) {
            case 'EACCES':
                throw new Error(bind + ' requires elevated privileges');
            case 'EADDRINUSE':
                throw new Error(bind + ' is already in use');
            default:
                throw error;
        }
    });
    server.on('listening', () => {
        const addr = server.address();
        const bind = typeof addr === 'string' ? 'pipe ' + addr : 'port ' + addr.port;
        console.log('Listening on ' + bind);
    });
    server.listen(port);
});
