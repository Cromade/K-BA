final int fiveSeconds = 5 * 1000;
        RequestConfig requestConfig = RequestConfig.custom().setConnectTimeout(fiveSeconds).build();
        final HttpClientBuilder httpClientBuilder = HttpClientBuilder.create().setDefaultRequestConfig(requestConfig);

        // used for test, because, as the wiremock server is started and shutdown with each test
        // keeping an alive connection to a server that was shutdown will create stale connection
        // and the stale conn detection mechanism is not 100% reliable, sometimes producing IOException.
        if (!reuseConnection) {
            httpClientBuilder.setConnectionReuseStrategy(NoConnectionReuseStrategy.INSTANCE);
        }

        if (credentials != null) {
            httpClientBuilder.setDefaultCredentialsProvider(credentials);
        }
        
        HttpClient httpClient = httpClientBuilder.build();
        ClientHttpRequestFactory requestFactory = new HttpComponentsClientHttpRequestFactory(httpClient);
        return new RestTemplate(requestFactory);
(10:54:47) Curtil, Thierry: 
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-web</artifactId>
      <version>4.3.9.RELEASE</version>
      <exclusions>
        <exclusion>
          <groupId>org.springframework</groupId>
          <artifactId>spring-aop</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.springframework</groupId>
          <artifactId>spring-beans</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.springframework</groupId>
          <artifactId>spring-context</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.springframework</groupId>
          <artifactId>spring-core</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
